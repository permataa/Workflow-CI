name: ML Project CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r MLProject/requirements.txt

      - name: Train via MLflow Project
        run: |
          mlflow run ./MLProject \
            --env-manager=local \
            --experiment-name "Personality Prediction" \
            -P data_path=personality.csv \
            -P n_estimators=100 \
            -P max_depth=10

      - name: Get latest MLflow model path
        id: get_model_path
        run: |
          MODEL_PATH=$(find mlruns -type d -path "*/model" | sort -r | head -n 1)
          echo "model_path=$MODEL_PATH" >> $GITHUB_OUTPUT

      
      - name: Commit and push MLflow artifacts
        run: |
          git config user.name 'github-actions'
          git config user.email 'github-actions@github.com'
          git add mlruns
          git commit -m 'Update model artifact from MLflow tracking' || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Debug secrets
        run: echo "USERNAME=${{ secrets.DOCKER_USERNAME }}"

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image from MLflow Model
        run: |
          echo "Building Docker image from: ${{ steps.get_model_path.outputs.model_path }}"
          mlflow models build-docker \
              -m "${{ steps.get_model_path.outputs.model_path }}" \
              -n personality-classification:latest

      - name: Debug Docker Images
        run: docker images

      - name: Docker Tag and Push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag personality-classification:latest $DOCKER_USERNAME/personality-classification:latest
          docker push $DOCKER_USERNAME/personality-classification:latest
